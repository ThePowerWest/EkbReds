@page
@model Web.Pages.Admin.UsersModel
@using Microsoft.AspNetCore.Identity;
@using ApplicationCore.Entities.Identity
@{
}
<div  style="height: 300px;width:100%; padding: 140px 0 300px 0">
    <img style="height: 300px; width:100%" src="/images/innerbanner.jpg" />
</div>
<div class="container" style="padding:30px 0 20px 0">
    <!--Список пользователей-->
    <div class="row" style="padding:30px 0 30px 0">
        <div class="col-md-12">
            <h2 class="text-center">Список пользователей</h2>
            <!--Триггер-->
            <button type="button" data-toggle="modal" data-target="#AddUserForm" class="btn btn-success" style="margin:0 0 10px 0">Добавить</button>
            <!--Триггер-->
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">Id</th>
                        <th scope="col">Имя пользователя</th>
                        <th scope="col">Email</th>
                        <th scope="col">Подтвержден</th>
                        <th scope="col">Роль</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model.Users)
                {
                    <form method="post">
                    <tr>
                    <td>@user.Id</td>
                    <td>@user.UserName</td>
                    <td>@user.Email</td>
                    <td>@user.EmailConfirmed</td>
                    <td>
                        @{
                        IList<string> roles = await Model.UserManager.GetRolesAsync(user);
                            foreach (var role in roles)
                            {
                                <p>@role</p>
                            }
                            
                        }
                    </td>
                    <td>
                        <button type="submit" asp-page="/Admin/EditUser" asp-route-role="@{IList<string> inputRoles = await Model.UserManager.GetRolesAsync(await Model.UserManager.FindByIdAsync(user.Id));
                            foreach (var role in roles)
                            {
                                @role
                            }
                        }" asp-route-emailconfirmed="@user.EmailConfirmed" asp-route-email="@user.Email" asp-route-username="@user.UserName" asp-route-id="@user.Id" class="btn btn-warning">Редактировать</button>
                    </td>
                    <td>
                        <button type="submit" asp-page-handler="DeleteUser" asp-route-id="@user.Id" class="btn btn-danger">Удалить</button>
                    </td>
                    </tr>
                    </form>
                }
                </tbody>
            </table>
        </div>
    </div>
    <!--Конец списка пользователей-->
</div>
<!-- Модальное окно -->
<div class="modal fade" id="AddUserForm" tabindex="-1" aria-labelledby="AddUserFormLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h2 class="modal-title" id="AddUserFormLabel">Добавить нового пользователя</h2>
      </div>
      <div class="modal-body">
          <form method="post" id="AddForm">
                <div class="form-group">
                    <label asp-for="Input.UserName"></label>
                    <input asp-for="Input.UserName" class="form-control" />
                    <span asp-validation-for="Input.UserName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.Email"></label>
                    <input asp-for="Input.Email" class="form-control" />
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.Password"></label>
                    <input asp-for="Input.Password" class="form-control" />
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                @{
                    foreach (var inputRole in Model.Roles)
                    {
                        <div class="form-group">
                            <div class="radio">
                                <label asp-for="Input.Role">
                                <input asp-for="Input.Role" type="radio" value="@inputRole.Name"/> @inputRole.Name
                                </label>
                                <span asp-validation-for="Input.Password" class="text-danger"></span>
                            </div>
                        </div>
                    }
                }
                <div class="form-group">
                    <div class="checkbox">
                        <label asp-for="Input.EmailConfirmed">
                        <input asp-for="Input.EmailConfirmed" />
                        @Html.DisplayNameFor(m => m.Input.EmailConfirmed)
                        </label>
                    </div>
                </div>
                <br />
                    <div class="form-group float-end">
                        <button type="submit" asp-page-handler="AddUser" class="btn btn-success">Добавить</button>
                    </div>
            </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
      </div>
    </div>
  </div>
</div>